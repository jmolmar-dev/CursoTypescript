{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;AAAa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,uDAAuD;AACvD;AACA;AACA;AACA,0MAA0M,cAAc;AACxN,8BAA8B,sBAAsB;AACpD,0BAA0B,YAAY,sBAAsB,qCAAqC,2CAA2C,MAAM;AAClJ,4BAA4B,MAAM,iBAAiB,YAAY;AAC/D,uBAAuB;AACvB,8BAA8B;AAC9B,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,4BAA4B;AAC5B,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB,OAAO,EAAE,SAAS,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wCAAwC;AAC5E;AACA;AACA,eAAe,WAAW,EAAE,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,cAAc,0DAA0D;AACxE,kBAAkB;AAClB;AACA;AACA;AACA;AACA,+CAA+C,eAAe,yCAAyC,eAAe;AACtH;AACA;AACA,+BAA+B,kBAAkB,2BAA2B,iBAAiB;AAC7F;AACA;AACA,+BAA+B,kBAAkB,2BAA2B,iBAAiB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO,IAAI,aAAa;AAC3C,CAAC;AACD;AACA,oBAAoB,8BAA8B;AAClD;AACA,mBAAmB,OAAO,IAAI,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6BAA6B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uBAAuB,WAAW;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,EAAE,WAAW,QAAQ,MAAM;AAC1D;AACA;AACA,uBAAuB,QAAQ,QAAQ,MAAM;AAC7C;AACA;AACA;AACA,qBAAqB;AACrB,iCAAiC;AACjC,kCAAkC;AAClC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc,wBAAwB,OAAO;AAC5E;AACA;AACA;AACA;AACA,mBAAmB,QAAQ,IAAI,aAAa;AAC5C;AACA;AACA,2CAA2C,eAAe,aAAa,GAAG,GAAG;AAC7E;AACA;AACA,cAAc,QAAQ,EAAE,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qCAAqC;AACrC;AACA,kBAAkB;AAClB;AACA,2CAA2C,kBAAkB,QAAQ,gBAAgB;AACrF;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA,kBAAkB;AAClB;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,sCAAsC;AACtC;AACA,iBAAiB;AACjB,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA,4BAA4B,+CAA+C,KAAK,KAAK;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA,oBAAoB,iBAAiB;AACrC;AACA,CAAC,EAAE;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA,CAAC;AACD,4BAA4B,aAAa;AACzC,mBAAmB,YAAY,IAAI,kBAAkB;AACrD,CAAC;AACD;AACA,yBAAyB,OAAO;AAChC;AACA,6BAA6B,SAAS;AACtC;AACA;AACA,6BAA6B,KAAK;AAClC;AACA;AACA;;;;;;;;UEpcA;UACA;UACA;UACA;UACA","sources":["webpack://cursotypescript/./src/index.ts","webpack://cursotypescript/webpack/before-startup","webpack://cursotypescript/webpack/startup","webpack://cursotypescript/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconsole.log(\"Hola mundo\");\n/**\n * 1.- Tipos de Datos\n * string\n * number - enteros y decimales\n * boolean - true / false\n * void (?)\n * null\n * undefined\n */\nvar nombre = \"Jose\"; // Variable Global\nlet apellido = \"Rodriguez\"; //Variable Local\nconst PI = 3.1415; //Constantes --> durante la ejecucion del codigo no podremos modificar su valor \nconsole.log(\"Hola\" + \"Mundo\");\nconsole.log(nombre + apellido);\nconsole.log(nombre, apellido);\nconsole.log(`Hola${nombre}${apellido}`); //inyeccion del contenido de una variable\nlet a = \"pepe\", b = \"juan\";\n//Arrays de Datos\nlet alumnos = [\"Juan\", \"Jose\", \"Alex\"];\nlet personas = [\"Lucia\"];\n/*Factor de propagacion en listas */\nlet union = [...alumnos, ...personas];\n/*Nos podemos ayudar del entorno para esto , Podemos combinar distintos tipos en las\nlistas, y se tiparan todos */\nlet valores = [false, \"Hola\", 23];\nconsole.log(union);\n/* Clase 26/09/2024*/\n/*Comenzamos declarando los objetos: 1ยบ forma --> Estructura de Datos */\nlet misDatos = {\n    nombre: \"Jose\",\n    apellidos: \"Rodriguez\",\n    edad: 18\n};\nlet configuracion = Object.assign({ versionTS: \"Es6\", versionCodigo: \"1.0\" }, misDatos);\nlet propiedad1 = configuracion.versionTS;\nlet propiedad2 = configuracion.versionCodigo;\nconsole.log(`${propiedad1}${propiedad2}`);\n/*2ยบ forma --> Enum (como en java) */\n/*Asignamos clave valor a los enum, para poder compararlos posteriormente sin tener que acceder a su indice */\nvar EstadoTarea;\n(function (EstadoTarea) {\n    EstadoTarea[\"Pendiente\"] = \"P\";\n    EstadoTarea[\"Enproceso\"] = \"E\";\n    EstadoTarea[\"Terminado\"] = \"T\";\n})(EstadoTarea || (EstadoTarea = {}));\n;\nlet estadoPendiente = EstadoTarea.Enproceso;\nconsole.log(EstadoTarea.Pendiente);\n/* Vamos a instanciar ahora: */\nlet tarea1 = { nombre: \"Tarea1\", prioridad: 2, estado: EstadoTarea.Enproceso };\n/*Si deseo un objeto con las propiedades de ambos: */\nlet empleado2;\nempleado2 = { nombre: \"Pepe\", edad: 23, sueldo: 4000, fotocopia: 200 }; //No tenemos porque respetar el orden\nlet empleado1 = { nombre: \"Juan\", edad: 23, sueldo: 3400 };\nconsole.log(empleado1.edad);\n/*Operadores de Control */\n//Operador Ternario --> ? : funciona como un if-else\n//condicion ? verdadero : falso\nconsole.log(tarea1.estado == \"E\" ? `La tarea ${tarea1.nombre} se encuentra en ejecucion` : `La tarea ${tarea1.nombre} aun no se ha ejecutado`);\n//Estructura if-else\nif (empleado2.sueldo > empleado1.sueldo) {\n    console.log(`El empleado ${empleado2.nombre} gana mas que el empleado ${empleado1.nombre}`);\n}\nelse {\n    console.log(`El empleado ${empleado1.nombre} gana mas que el empleado ${empleado2.nombre}`);\n}\n//SWITCH: \nswitch (tarea1.estado) {\n    case \"P\":\n        console.log(\"Tarea Pendiente\");\n        break;\n    case \"E\":\n        console.log(\"Tarea en Proceso\");\n        break;\n    case \"T\":\n        console.log(\"Tarea terminada\");\n        break;\n    default:\n        console.log(\"Otro estado o no tiene estado\");\n        break;\n}\n/*Estructura try-catch --> DUDA*/\ntry {\n    let numero1 = 1;\n    console.log(numero1.toString);\n}\ncatch (error) {\n    console.log(\"Se ha producido un error al convertir un numero en String\", error);\n}\n/*Bucles */\nlet listadeTareas = [\n    {\n        nombre: \"Tarea 1\",\n        prioridad: 4,\n        estado: EstadoTarea.Enproceso\n    },\n    {\n        nombre: \"Tarea 2\",\n        prioridad: 8,\n        estado: EstadoTarea.Pendiente\n    },\n    {\n        nombre: \"Tarea 3\",\n        prioridad: 10,\n        estado: EstadoTarea.Terminado\n    }\n];\n/*Comenzamos con el bucle for each, que verdaderamente actua como una funcion\nya que recibe parametros */\n/*Se le podria incluir tambien la lista de las tareas como parametro de entrada antes de la =>*/\nlistadeTareas.forEach((tarea, index) => {\n    console.log(`${index} - ${tarea.nombre}`);\n});\n/*Bucle For: */\nfor (let index = 0; index < listadeTareas.length; index++) {\n    const tarea = listadeTareas[index];\n    console.log(`${index} - ${tarea.nombre}`);\n}\n/*Bucles While*/\n/*con != comparo valores pero no tipos, con !== comparo ambas cosas */\nwhile (tarea1.estado == EstadoTarea.Enproceso) {\n    if (tarea1.prioridad == 5) {\n        tarea1.estado = EstadoTarea.Terminado;\n        break;\n    }\n    else {\n        tarea1.prioridad++;\n    }\n}\n/*Bucle Do-While --> Se ejecutarรก al menos una vez*/\ndo {\n    tarea1.prioridad++;\n} while (tarea1.prioridad < 15);\n/*Asignacion multiple de variables: */\nlet perro = {\n    raza: \"Doberman\",\n    edad: 22\n};\n/*Declaracion 1 a 1 */\nlet miRaza = perro.raza;\nlet miEdad = perro.edad;\n/*Declaracion con factor de propagacion */\nlet { raza: string, edad: number } = perro;\n/*Factor de propagacion en objetos */\nlet estadoAplicacion = {\n    usuario: \"admin\",\n    password: \"hola123\",\n    sesion: 4\n};\n/*Se esta modificando el valor del objeto de arriba, es un objeto propagado donde estamos seteando una de las propiedades*/\nlet nuevoEstado = Object.assign(Object.assign({}, estadoAplicacion), { sesion: 5 });\n/*Comienzo de la 3ยช Sesion del Curso --> Funciones*/\n/*Introduccion Funciones */\n/**\n * Funcion que nos muetra un saludo por consola\n */\nfunction saludarporConsola() {\n    /*Podemos declarar variables locales con let, que solo\n    serviran dentro de nuestra propia funcion*/\n    let nombre = \"Pepillo\";\n    console.log(`Hola ${nombre}`);\n}\n/*Llamamiento de las funciones --> icono de cuadrado en VSC*/\nsaludarporConsola();\n/*Funcion con parametros --> en este caso 1 string */\n/**\n * Funcion que muestra un saludo por consola a la persona especificada\n * @param nombrePersona - nombre de la persona a saludar\n */\nfunction saludarConParametro(nombrePersona) {\n    console.log(`ยกHola! ${nombrePersona}`);\n}\nsaludarConParametro(\"Martin\");\n/**\n * Funcion que se despide de pepe\n * @param nombre\n */\nfunction despedirPersona(nombre = \"Pepe\") {\n    console.log(`Adios ${nombre}`);\n}\n/*A la funcion de arriba, si no le indicamos ningun parametro se\ndespedira de pepe, sin embargo, le podremos introducir cualquier otro nombre.\nEn este caso, se puede ejecutar de las dos formas*/\ndespedirPersona();\ndespedirPersona(\"Alba\");\n/* El parametro sera String o bien undefined*/\n/**Funcion que muestra un adios por consola\n * @param nombre (Opcional) nombre de la persona a despedir\n */\nfunction despedidaOpcional(nombre) {\n    if (nombre) {\n        console.log(`Adios ${nombre}`);\n    }\n    else {\n        console.log(\"Adios anonimo\");\n    }\n}\ndespedidaOpcional(); //Adios anonimo\ndespedidaOpcional(\"Paco\"); //Adios Paco\n/**\n * Funcion de varios Parametros\n * @param nombre\n * @param apellidos\n * @param edad\n */\nfunction variosParam(nombre = \"Juan\", apellidos, edad = 18) {\n    if (apellidos) {\n        console.log(`${nombre} ${apellidos} tiene ${edad} aรฑos`);\n    }\n    else {\n        console.log(`${nombre} tiene ${edad} aรฑos`);\n    }\n}\n/*Si pongo arriba por ejemplo nombre:string = \"Juan\", poniendo undefined en su sitio llamariamos a ese valor*/\nvariosParam(\"Pepe\"); //Pepe tiene 18 aรฑos\nvariosParam(\"Jose\", \"Martinez\"); //Jose Martinez tiene 18 aรฑos\nvariosParam(\"Pepe\", \"Gomez\", 23); //Pepe Gomez tiene 23 aรฑos\nvariosParam(\"Pepe\", undefined, 23); //Pepe tiene 23 aรฑos\nvariosParam(undefined, undefined, 23);\nfunction ejemplosVariosTipos(a) {\n    if (typeof (a) == 'string') {\n        console.log(\"A es un string\");\n    }\n    else if (typeof (a) == 'number') {\n        console.log(\"A es un number\");\n    }\n    else {\n        console.log(\"A no es un string ni tampoco un number\");\n        throw Error(\"A no es ni un string ni un number\");\n    }\n}\nejemplosVariosTipos(\"Hola\");\nejemplosVariosTipos(3);\n/*ejemplosVariosTipos(true); --> no se puede, da error*/\n/*Funciones anonimas*/\nlet fAnonima = function () {\n    console.log(\"Hola mundo\");\n};\nfAnonima();\nlet fitera = function (tarea, indice) {\n    console.log(`La tarea es ${tarea.nombre} y esta en la posicion ${indice}`);\n};\nlistadeTareas.forEach(fitera);\n/*Funciones arrow*/\nlet fArrow = (tarea, indice) => {\n    console.log(`${indice} - ${tarea.nombre}`);\n};\nlistadeTareas.forEach(fArrow);\n//listadoTareas.forEach ((tarea:Tarea) => {console.log(`${tarea.nombre}`)}); --> No creamos la funcion arrow, se lo pasamos directamente. Tambien podriamos pasar una funcion anonima\n//Funcion con return\nfunction ejemploReturn(nombre, apellidos) {\n    return `${nombre} ${apellidos}`;\n}\nconst nombreCompleto = ejemploReturn(\"Juanillo\", \"Gomez\");\nconsole.log(nombreCompleto);\nconsole.log(ejemploReturn(\"Martin\", \"San Jose\"));\nfunction ejemploCadenaTexto(...nombres) {\n    nombres.forEach(nombre => {\n        console.log(nombre);\n    });\n}\nfunction ejemploCadenaTexto2(nombres) {\n    const ListaNombres = [\"Sara\", \"Pepe\"];\n    nombres.forEach(nombre => {\n        console.log(nombre);\n    });\n}\nconst listaNombres2 = [\"Pepe\", \"Ana\"];\nejemploCadenaTexto(\"Juan\", \"Luis\", \"Jose\", \"Ricardo\");\n/*ejemploCadenaTexto2(\"Jose\",\"Luis\");* --> No funcionarรก*/\nejemploCadenaTexto2(listaNombres2);\nlet empleado3 = { nombre: \"Pepe\", edad: 23, sueldo: 2300 };\n/*Llamaremos a una funcion flecha a partir del nombre que le hemos definido*/\nconst monstrarEmpleado = (empleado3) => `${empleado3.nombre} tiene ${empleado3.edad} aรฑos`;\nconst datosdelEmpleado = (empleado) => {\n    if (empleado.edad > 70) {\n        return `Empleado ${empleado.nombre} estรก en edad de jubilarse`;\n    }\n    else {\n        return `Empleado ${empleado.nombre} estรก en edad laboral`;\n    }\n};\ndatosdelEmpleado(empleado3);\nconst obtenerSalario = (empleado, cobrar) => {\n    if (empleado.edad > 70) {\n        return `Empleado ${empleado.nombre} estรก en edad de jubilarse`;\n    }\n    else {\n        cobrar(); //callback a ejecutar\n    }\n};\nobtenerSalario(empleado3, () => 'Hola Pepe'); //De esta forma, ejecutaremos la parte del else (callback)\n/*Funciones Asincronas:*/\nfunction ejemploAsincrona() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield console.log(\"Tarea a completar antes de seguir con la secuencia de intrucciones\");\n        console.log(\"Tarea Completada\");\n        return \"Hola\";\n    });\n}\nejemploAsincrona().then((respuesta) => {\n    console.log(\"Respuesta\", respuesta);\n});\n/*Generada*/\nfunction* ejemploGenerada() {\n    let index = 0;\n    while (index < 5) {\n        yield index++;\n    }\n}\n/*La funcion generadora serรก almacenada dentro de una variable --> La podremos pausar y reanudar*/\nlet generadora = ejemploGenerada();\nconsole.log(generadora.next().value); //0\nconsole.log(generadora.next().value); //1\nfunction* watcher(valor) {\n    yield valor; //emitimos el valor inicial\n    yield* worker(valor); //Llamamos a las emisiones del worker para que emita otros valores\n    yield valor + 4;\n}\nfunction* worker(valor) {\n    yield valor + 1;\n    yield valor + 2;\n    yield valor + 3;\n}\nlet generatorSaga = watcher(0);\nconsole.log(generatorSaga.next().value); // 0 (lo ha hecho el Watcher)\nconsole.log(generatorSaga.next().value); // 1 (lo ha hecho el Worker)\nconsole.log(generatorSaga.next().value); // 2 (lo ha hecho el Worker)\nconsole.log(generatorSaga.next().value); // 3 (lo ha hecho el Worker)\nconsole.log(generatorSaga.next().value); // 4 (lo ha hecho el Watcher)\n/*Apuntes 07-10-2024*/\n/**\n * CALLBACK\n */\nlet fsuma = function suma(a, b) {\n    return a + b;\n};\nlet fresta = function resta(a, b) {\n    return a - b;\n};\nlet fmultiplica = function multiplica(a, b) {\n    return a * b;\n};\nfunction opera(x, y, funcion) {\n    return funcion(x, y);\n}\nopera(1, 2, fsuma); /*Sumarรกs 1 y 2*/\nopera(4, 2, fresta); /*Restarรกs 4 y 2*/\nopera(4, 2, fmultiplica);\n/**\n * Funciones Asincronas\n */\nfunction asicrona() {\n    return __awaiter(this, void 0, void 0, function* () {\n        let suma = 0;\n        for (let i = 0; i < 1000000; i++) {\n            suma += i;\n        }\n        return suma;\n    });\n}\nasicrona().then((data) => { console.log(`El resultado de ejecutar asyc = ${data}`); });\nconsole.log(\"Lรญnea de Cรณdigo posterior a llamada asรญncrona\");\n/*Todas las funciones asincronas devolvera una promesa*/\nfunction getDataUniversity() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = yield fetch(\"hhtp://universities.hipolabs.com/search?country=Spain\");\n        let respuesta = yield data.json();\n        return respuesta;\n    });\n}\ngetDataUniversity().then((data) => {\n    data.forEach((universidad) => {\n        console.log(universidad.name);\n    });\n});\n/*getDataUniversity().then ((data:University[]) => {\n    for (let i = 0; i < data.lenght; i++){\n    console.log (data[i].name)\n})}*/\n/**\n * Funciones Generadoras\n */\nfunction* fGeneradora() {\n    for (let tarea in listadeTareas) {\n        yield listadeTareas[tarea];\n    }\n}\nlet funcionGen = fGeneradora();\n/*Se iran devolviendo posicion a posicion*/\nconsole.log(funcionGen.next());\nconsole.log(funcionGen.next());\n/*Clase 09-10-2024*/\n/*Repaso Funciones Generadoras*/\nfunction* fGeneradora2() {\n    yield \"Hola\";\n    yield \"Mundo\";\n}\nlet funcionGen2 = fGeneradora2();\nlet str = funcionGen2.next(); // Obtiene el primer valor del iterador.\n/*Mezclando funciones generadores y asincronas*/\nfunction obtenerDatosWeb() {\n    return __asyncGenerator(this, arguments, function* obtenerDatosWeb_1() {\n        let peticion = yield __await(fetch(\"https://haveibeenpwned.com/api/v2/breaches\"));\n        let datos = yield __await(peticion.json());\n        for (let index = 0; index < datos.length; index++) {\n            yield yield __await(datos[index]);\n        }\n    });\n}\nlet datosWebPage = obtenerDatosWeb();\n/*En cada un de estos next(), iremos iterando sobre los elementos del JSON y sacaemos de cada posicion la informacion necesaria*/\ndatosWebPage.next().then(({ value, done }) => {\n    console.log(value.Name);\n});\ndatosWebPage.next().then(({ value, done }) => {\n    console.log(`${value.Name} - ${value.Description}`);\n});\nfunction hola(nombre, apellido, edad) {\n    let saludo = `Hola ${nombre}`;\n    if (apellido != undefined) {\n        saludo = saludo + `${apellido}`;\n    }\n    if (edad != undefined) {\n        saludo = saludo + `${edad}`;\n    }\n    return saludo;\n}\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/index.ts\"](0, __webpack_exports__);\n",""],"names":[],"sourceRoot":""}